# dhqemu example config for a single virtual machine
# ---------------------------------------------------------------------------

# name of the guest - use letters and numbers only. No spaces / symbols
VMNAME="guest"

# folder to store files related to this vm
VMPATH="/usr/local/qemu/$NAME"

# uefi or bios
BOOTMODE=uefi

# true or false -- ignored if bootmode is bios
SECUREBOOT=false

# true = do not display a window for the console
# false = display a window for the console
HEADLESS=false

# ---------------------------------------------------------------------------

# This will be passed to the "-m" paramter of qemu's commandline:
# defaults to 4G if not defined
MEM="4G"

# if defined, dhqemu will use /dev/hugpages for this instance and also attemt
# to increase system hugepages if there aren't enough available
# see https://wiki.archlinux.org/title/KVM

# HUGEPAGES=1000

# ---------------------------------------------------------------------------

# how many vcpus to assign to this vm
# this generates the following command-line argument for qemu:
# "-cpu host -smp cores=$THREADS,threads=1,sockets=1"
# note: as of Jan 2023 - this is the recommended way for guests to define
# cpu topology -- allow linux host kernel to assign threads to pcpus
THREADS=16

# alternatively, you can override by:
# CPU="-cpu Skylake-Server-v5 -smp cores=8,threads=2,sockets=1"

# ---------------------------------------------------------------------------

# if left undefined, no change is made

# CPU niceness (see man page for "renice")
# range: -20 to 19
# the higher the number the more "nice" this VM will be to other processes

CPUNICE="19"

# I/O niceness (see man page for "ionice")
# this is passed to the command-line of ionice
# Lowest priority: -c 3
# Highest priority: -c 1 -n 0

# IONICE="-c 3"

# ---------------------------------------------------------------------------

# you must define three things per virtual nic:
# 1. mac address (can also be 'generate')
# 2. linux bridge device to connect it to
# 3. mtu

MAC[0]="generate"
BRIDGE[0]="br0"
MTU[0]=9000

# define as many as you like just increase the array number

#MAC[1]="generate"
#BRIDGE[1]="vnet"
#MTU[1]=9000

#MAC[2]="02:3F:CA:3C:6D:09"
#BRIDGE[2]="br1"
#MTU[2]=1500

# ---------------------------------------------------------------------------

# Similar to network cards above, you can create as many as you like.
# You only need to define the size per drive.
# Use M for megabytes, G for gigabytes

VDISK[0]="25G"

# VDISK[1]="50G"
# VDISK[2]="30G"

# ---------------------------------------------------------------------------

# Optical/CD drives - QEMU comes with a built-in IDE controller which is
# where these will get attached. Define up to two. 
# Comment them out for none.

#CDROM[0]="/srv/http/archlinux.iso"
#CDROM[1]="/path/to/something/else.iso"

# ---------------------------------------------------------------------------

# choose a video card to plug into your VM. (see qemu -device help)
# virtio-gpu is the default and is typically best with linux guests
# qxl-vga works well with windows guests

VCARD="virtio-gpu"

# Or you can override by defining VIDEO as below:
#VIDEO="-device qxl-vga,id=video0"

# ---------------------------------------------------------------------------


# qxl-vga works for most types of guests.
VIDEO="-device virtio-gpu,id=video0 -display gtk,gl=on,grab-on-hover=off,window-close=on"
#VIDEO="-device virtio-gpu,id=video0 -display none"
#VIDEO="-device qxl-vga,id=video0 -display gtk,gl=on,grab-on-hover=off,window-close=on"
DAEMONIZE="-daemonize"

# VNC for remote access to console of the guest. Special keyword "none"
# means don't allocate a port but you can change this by accessing
# the qemu monitor port and issuing the command change vnc :0
# Where "0" is the display port you want.

# :0 == tcp port 5900
# :1 == tcp port 5901
# :2 == tcp port 5902
# and so on

# Typically, leave at none its unallocated unless needed
#VNC="-vnc :0,password=off"

# ---------------------------------------------------------------------------

# Basic sound card (intel HDA) - Comment out if you don't need it
#SOUND="-device intel-hda,id=sound -device hda-micro,id=codec0,bus=sound.0,cad=0"

# ---------------------------------------------------------------------------

# USB - See QEMU man page for more info - You can comment this out
# for no USB at all.

# Note: The QEMU EHCI (USB 2.0) controller has 6 ports by default. These 
# ports do not support USB 1.0 devices.

# The QEMU UHCI (USB 1.0) controller has 2 ports by default. You can add
# these controllers as "companion controllers" to the EHCI controller.
# If you add three of them as in this example, that will make it so that
# each of the 6 ports of the USB (EHCI) hub can accept both 2.0 and 1.0 
# devices.

# Note: if you don't need USB for a guest, comment this out and add
# usb=off to your -M option in the ADV= section below
#USB="-device ich9-usb-ehci1,id=ehci,multifunction=on -device ich9-usb-uhci1,masterbus=ehci.0,firstport=0,multifunction=on -device ich9-usb-uhci1,masterbus=ehci.0,firstport=2,multifunction=on -device ich9-usb-uhci1,masterbus=ehci.0,firstport=4,multifunction=on"

# Human Input Devices -- typically the only one you need if you want to 
# use VNC to remotely view a guest that has a GUI interface is a TABLET
# to enhance pointer accuracy. If your guest however is just a console
# with text you dont need this.

# See https://www.kraxel.org/blog/2015/06/new-member-in-the-virtio-family-input-devices/

# This will plug a tablet pointer into a PCI slot
HID="-device virtio-tablet-pci,id=tablet0"

# ---------------------------------------------------------------------------

# Memory Ballooning - this enables the guest to give unused memory back to the host
BALLOON="-device virtio-balloon-pci,id=balloon0"

# Let the guest use the host's random number generator
# If your host is a reasonably new linux, be sure to: systemctl start haveged
RNG="-object rng-random,filename=/dev/random,id=rng0 -device virtio-rng-pci,rng=rng0"

# ---------------------------------------------------------------------------

# SPICE - Remote Viewing

# Spice allows you to setup "virtual channels" which can be used for things
# like redirecting local (on the machine you're using as a view) USB ports
# to the guest (via the network).

# You can also get some decent audio/video performance as well, sometimes
# better than native RDP in Windows.

# Note: You will need to install the VDA Agent (found on the virtio drivers cd) if you want to use this
# You can also comment this out if you don't require spice.

# You can hurt your head trying to understand all these. If you want to try
# check out https://qemu.weilnetz.de/doc/qemu-doc.html#index-g_t_002dspice-58

# Note: USB is required for spice to work

# What TCP port should QEMU listen on for SPICE connections
# Must be unique per VM
#SPICE_PORT=7101

#SPICE_REDIR="-chardev spicevmc,id=charredir0,name=usbredir -chardev spicevmc,id=charredir1,name=usbredir -chardev spicevmc,id=charredir2,name=usbredir -chardev spicevmc,id=charredir3,name=usbredir -device usb-redir,chardev=charredir0,id=redir0 -device usb-redir,chardev=charredir1,id=redir1 -device usb-redir,chardev=charredir2,id=redir2 -device usb-redir,chardev=charredir3,id=redir3"

#SPICE_AGENT="-chardev spicevmc,id=charchannel0,name=vdagent -device virtio-serial-pci,id=virtio-serial0 -device virtserialport,bus=virtio-serial0.0,nr=1,chardev=charchannel0,id=channel0,name=com.redhat.spice.0"

#SPICE="$SPICE_REDIR $SPICE_AGENT -spice port=$SPICE_PORT,addr=0.0.0.0,disable-ticketing,agent-mouse=on,seamless-migration=off,plaintext-channel=main,plaintext-channel=display,plaintext-channel=inputs,plaintext-channel=cursor,plaintext-channel=playback,plaintext-channel=record,plaintext-channel=usbredir,image-compression=auto_glz,jpeg-wan-compression=auto,zlib-glz-wan-compression=auto,streaming-video=filter,playback-compression=off"

# ---------------------------------------------------------------------------

# QEMU advanced settings -- read man page -- this is a place where you can manually put things that the script doesn't directly support.
# Also note: Windows guests prefer rtc to be 'localtime' but I prefer to go into windows and
# change this to UTC in the registry so that all of my VMs are using base=utc regardless of OS
# USB Note: you can append usb=off to the machine type below if you don't need usb and have commented out the devices above.
# example: -machine q35,accel=kvm,vmport=off,usb=off
ADV="-machine q35,accel=kvm,vmport=off -nodefaults -no-user-config -msg timestamp=on -rtc base=utc,driftfix=slew -no-fd-bootchk -overcommit mem-lock=off,cpu-pm=off"

# ---------------------------------------------------------------------------

MONPORT="-monitor telnet:127.0.0.1:$MON_PORT,server,nowait,nodelay"

# ---------------------------------------------------------------------------
