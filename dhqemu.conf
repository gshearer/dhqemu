# DHQEMU global configuration
# ---------------------------------------------------------------------------

# Path to search for guest specific configuration
DHQ_CONFDIR="/usr/local/etc/dhqemu.d"

# Guests to auto start / stop with systemd
# DHQ_AUTO="example1 example2"

# guest defaults
# Note: All of these can be overridden in guest specific conf files
# ---------------------------------------------------------------------------

# Guest files will be stored in $DHQ_VMPATH/guestname
DHQ_VMPATH="/mnt/fast/dhqemu"

# qemu system command
# adjust ionice/nice to your liking or remove
DHQ_QEMUCMD="ionice -c2 -n0 nice -n -10 qemu-system-x86_64"

# default name of guest
# note: keep this simple - use only letters/numbers no spaces
DHQ_VMNAME="guest1"

# Use uuidgen -r to generate one or use "generate" to do this on first boot
DHQ_UUID="generate"

# location of lockfile - used to serialize multi-guest boots
DHQ_LOCKFILE="/run/dhqemu.lock"

# seconds to wait for guest to gracefully shutdown
DHQ_SHUTWAIT=20

# see qemu's -k argument
DHQ_LANG="-k en-us"

# The backup process will place a compressed tar of the guest in this folder
DHQ_BACKUPPATH="/mnt/fast/doc/archive/dhqemu"

# permission to set for files/dirs created by this script
DHQ_FPERM="0600"
DHQ_DPERM="0700"

# compression filter
DHQ_CF="ionice -c3 nice -n 19 zstd -cz -T0 --ultra -20"

# decompression filter
DHQ_DCF="ionice -c3 nice -n 19 zstdcat"

# file name extension for the filter type
DHQ_CFEXT="zst"

# local display
# -------------

# Note: this will be ignored if DHQ_VIDEO is undefined
#DHQ_DISPLAY="-display gtk,gl=on,grab-on-hover=off,window-close=on"
# For headless
DHQ_DISPLAY="-display none"

# Local audio output
# Note: see qemu-system-xyz -audiodev help
#DHQ_AUDIO="-audiodev pipewire,id=audio0"
#DHQ_AUDIO="-audiodev pa,id=audio0"
#DHQ_AUDIO="-audiodev spice,id=audio0"

# remote display
# --------------

# VNC Server for remote display
# Note: This must be unique for every VM this is enabled
# :0 == 5900, :1 == 5901, :2 == 5902 etc
#DHQ_VNC="-vnc :0,password=off"

# SPICE (virt-viewer, etc)
# Note: See virtual hardware below for items that support spice
#DHQ_SPICE="-spice port=5900,addr=0.0.0.0,disable-ticketing=on,seamless-migration=on"

# boot config
# -----------

# uncomment this if you want the guest to boot in frozen state
# this gives you a chance to connect a remote display such as vnc or spice
# so that you can perhaps enter bios/uefi for custom boot device
# You can also prepend this to your command line:
# DHQ_SUSPEND="-S" dhqemu boot xyz
# DHQ_SUSPEND="-S"

# default uefi firmware
# Note: if this is undefined, bios boot mode will be used
DHQ_FIRMWARE="/usr/share/edk2-ovmf/x64/OVMF_CODE.secboot.4m.fd"

# default nvram image to copy when booting for the first time
# Note: this is ignored if DHQ_FIRMWARE is undefined
DHQ_NVRAM="/usr/share/edk2-ovmf/x64/OVMF_VARS.4m.fd"

# default boot seq for bios mode
# Note: this is ignored if DHQ_FIRMWARE is defined
DHQ_BOOTSEQ="-boot order=cdn,menu=off"

# Trusted platform module
#DHQ_TPM=true

# guest cpu
# ---------

# If left undefined, dhqemu will use type "host" and configure
# the following smp: X,sockets=1,dies=1,cores=X,threads=1
# where X is ${nproc} minus 2

# For Windows guests, you may wish to append:
# hv-time=on,hv-relaxed=on,hv-vapic=on,hv-spinlocks=0x1fff

# see qemu-system-xyz -cpu help and -smp help
#DHQ_CPU="-cpu host -smp 10,sockets=1,dies=1,cores=10,threads=1"

# guest memory
# ------------

# this variable must be defined and is specified in megabytes
DHQ_MEM=4096

# optionally enable linux huge page support
# Note: see https://www.linux-kvm.org/page/UsingLargePages
#DHQ_HUGE=true

# guest ethernet nics
# -------------------

# you must define three things per virtual nic:
# 1. mac address (can also be 'generate')
# 2. linux bridge device to connect it to
# 3. mtu
#
# Note: if mac address is 'generate', dhqemu will create a randomized mac
# and will store it for future boots for persistence

DHQ_MAC[0]="generate"
DHQ_BRIDGE[0]="vmbridge"
DHQ_MTU[0]=9000

# define as many as you like just increase the array number

#DHQ_MAC[1]="generate"
#DHQ_BRIDGE[1]="vnet"
#DHQ_MTU[1]=9000

#DHQ_MAC[2]="02:3F:CA:3C:6D:09"
#DHQ_BRIDGE[2]="br0"
#DHQ_MTU[2]=1500

# guest storage
# -------------

# Similar to network cards above, you can create as many as you like.
# You only need to define the size per drive.
# Use M for megabytes, G for gigabytes

DHQ_VDISK[0]="50G"
#DHQ_VDISK[1]="50G"
#DHQ_VDISK[2]="30G"

# guest optical drives
# --------------------
# Note: if your guest has USB enabled you can instead use plug/unplug
# these will be "plugged" to the built-in ide ports of the -machine platform

#DHQ_CD[0]="/srv/http/archlinux.iso"
#DHQ_CD[1]="/path/to/something/else.iso"

# default virtual hardware
# ------------------------

# note simply comment any of these out if not desired

# Install a virtual video card
DHQ_VIDEO="-device virtio-gpu,id=video0"
# qxl will work for initial boot until you can get a driver installed
#DHQ_VIDEO="-device qxl-vga,id=video0"

# Virtual sound card
#DHQ_SOUND="-device intel-hda,id=sound -device hda-micro,id=codec0,bus=sound.0,cad=0"

# Balloon device allows the host to reclaim unused guest memory
DHQ_BALLOON="-device virtio-balloon-pci,id=balloon0"

# random number generator
DHQ_RNG="-object rng-random,filename=/dev/random,id=rng0 -device virtio-rng-pci,rng=rng0"

# USB
# Note: This is required for SPICE usb redirection
DHQ_USB="-device qemu-xhci,p2=15,p3=15,id=usb"

# PCI-E serial
# Note: This is required for SPICE vda agent
#DHQ_SERIAL="-device virtio-serial-pci,id=serial"

# PCI-E HID Tablet
#DHQ_TABLET="-device virtio-tablet-pci,id=tablet0"
# Note: If you enable USB you may prefer usb-tablet
DHQ_TABLET="-device usb-tablet,bus=usb.0,id=tablet0"

# Spice Agent Chardev
# Note: This requires PCI-E serial
#DHQ_SPICEAGENT="-chardev spicevmc,id=charchannel0,name=vdagent -device virtserialport,bus=serial.0,nr=1,chardev=charchannel0,id=channel0,name=com.redhat.spice.0"

# Spice USB Redirection Chardev
# Note: this requires USB to be enabled
#DHQ_SPICEREDIR="-chardev spicevmc,id=charredir0,name=usbredir -chardev spicevmc,id=charredir1,name=usbredir -chardev spicevmc,id=charredir2,name=usbredir -device usb-redir,chardev=charredir0,id=redir0,bus=usb.0 -device usb-redir,chardev=charredir1,id=redir1,bus=usb.0 -device usb-redir,chardev=charredir2,id=redir2,bus=usb.0"

# machine type
# Note: see qemu-system-xyz -machine help
DHQ_MACHINE="-machine q35,dump-guest-core=off,hpet=off,acpi=on,vmport=off,smm=on,usb=off,memory-backend=pc.ram"

# utc or localtime
DHQ_RTC="-rtc base=utc,driftfix=slew"

# globals
DHQ_GLOBAL="-global driver=cfi.pflash01,property=secure,value=on -global ICH9-LPC.noreboot=off -global kvm-pit.lost_tick_policy=delay -global ICH9-LPC.disable_s3=1 -global ICH9-LPC.disable_s4=1"

# misc - stuff 90% of everyone will want for every VM
DHQ_MISC="-nodefaults -no-user-config -msg timestamp=on -accel kvm -overcommit mem-lock=off,cpu-pm=off -watchdog-action reset"

# prepend to the beginning of the qemu command line
#DHQ_PREPEND="-whatever"

# append to the end of the qemu command line
#DHQ_APPEND="-stuff"
